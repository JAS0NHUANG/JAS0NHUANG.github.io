<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JAS0N HUANG</title>
  
  
  <link href="https://jas0nhuang.github.io/atom.xml" rel="self"/>
  
  <link href="https://jas0nhuang.github.io/"/>
  <updated>2023-05-12T15:00:02.652Z</updated>
  <id>https://jas0nhuang.github.io/</id>
  
  <author>
    <name>JAS0N HUANG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在 Hexo 部落格使用 SASS</title>
    <link href="https://jas0nhuang.github.io/2020/05/06/hexo-sass/"/>
    <id>https://jas0nhuang.github.io/2020/05/06/hexo-sass/</id>
    <published>2020-05-05T23:48:37.000Z</published>
    <updated>2023-05-12T15:00:02.652Z</updated>
    
    <content type="html"><![CDATA[<p>嘗試在 Hexo 部落格使用 SASS，不難，這裡記錄一下過程</p><h2 id="安裝與設定"><a href="#安裝與設定" class="headerlink" title="安裝與設定"></a>安裝與設定</h2><p>安裝 hexo-renderer-sass</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-renderer-sass</span><br></pre></td></tr></table></figure><p>在 Hexo 專案的主要 _config.yml 檔或主題的 _config.yml 檔裡加上：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_sass:</span><br><span class="line">  includePaths:</span><br><span class="line">    - node_modules</span><br><span class="line">  outputStyle:</span><br><span class="line">    compressed</span><br></pre></td></tr></table></figure><h2 id="建立-SASS-檔（-scss）"><a href="#建立-SASS-檔（-scss）" class="headerlink" title="建立 SASS 檔（.scss）"></a>建立 SASS 檔（.scss）</h2><p>進入 source&#x2F;css&#x2F; 資料夾備份舊的 CSS 檔案，新建一個 style.scss 檔。<br>我自已的 CSS 其實很簡單，單純只是想瞭解一下 SASS 的基本語法，像是：</p><ul><li>變數（variable)：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$font-family-serif: &quot;Palatino Linotype&quot;, &quot;Source Han Serif&quot;, PMingLiU, serif; </span><br></pre></td></tr></table></figure></li><li>多層（nesting）:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.tags</span><br><span class="line">    &gt; a</span><br><span class="line">        STYLE</span><br><span class="line">    &amp;::before</span><br><span class="line">        STYLE</span><br></pre></td></tr></table></figure></li><li>延展&#x2F;繼承（extend&#x2F;inheritance）：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%code-and-block </span><br><span class="line"></span><br><span class="line">code</span><br><span class="line">    @extend %code-and-block</span><br><span class="line">    STYLE</span><br></pre></td></tr></table></figure>像是混入（mixin）、模組（module）或是運算（operator）都沒有用到。</li></ul><h2 id="Hexo-generate"><a href="#Hexo-generate" class="headerlink" title="Hexo generate"></a>Hexo generate</h2><p>如同往常執行 <code>hexo g</code>，Hexo 就會自動生成 CSS 檔案了。</p><h2 id="SASS-一般環境使用"><a href="#SASS-一般環境使用" class="headerlink" title="SASS 一般環境使用"></a>SASS 一般環境使用</h2><p>SASS 現在也有 NPM 的包，只要 <code>npm install -g sass</code> 就可以安裝在 Node 的環境下使用了。<br>轉換 .scss 或 .sass 檔案也很簡單，就是 <code>sass INPUT.sass OUTPUT.css</code> 就可以了，然後如果要自動監控 sass 檔在指令裡加 –watch 的選項就可以了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;嘗試在 Hexo 部落格使用 SASS，不難，這裡記錄一下過程&lt;/p&gt;
&lt;h2 id=&quot;安裝與設定&quot;&gt;&lt;a href=&quot;#安裝與設定&quot; class=&quot;headerlink&quot; title=&quot;安裝與設定&quot;&gt;&lt;/a&gt;安裝與設定&lt;/h2&gt;&lt;p&gt;安裝 hexo-renderer-sa</summary>
      
    
    
    
    
    <category term="CSS" scheme="https://jas0nhuang.github.io/tags/CSS/"/>
    
    <category term="Hexo" scheme="https://jas0nhuang.github.io/tags/Hexo/"/>
    
    <category term="SASS" scheme="https://jas0nhuang.github.io/tags/SASS/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 10 - 課程心得</title>
    <link href="https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-10/"/>
    <id>https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-10/</id>
    <published>2020-05-02T04:28:27.000Z</published>
    <updated>2023-05-12T15:00:02.626Z</updated>
    
    <content type="html"><![CDATA[<p>胡立在 Lidemy 上最新的課程<a href="https://lidemy.com/courses/enrolled/793973">先別急著寫 LeetCode</a>，大概花三週的時間上完課，是個很不錯的程式思考、演算法入門課程，適合剛開始學寫程式的人。</p><h2 id="課程淺顯易懂"><a href="#課程淺顯易懂" class="headerlink" title="課程淺顯易懂"></a>課程淺顯易懂</h2><p>很仔細的帶著學生瞭解程式思考的過程，從寫虛擬碼、看懂程式、瞭解問題、分解問題、一直到實際寫程式，搭配一些練習，確實對打好基礎很有幫助，是不錯的演算法入門。<br>真的要說缺點，大概就是對我來說沒有太大的挑戰性吧……</p><h2 id="讓學生跟寫程式更熟一點"><a href="#讓學生跟寫程式更熟一點" class="headerlink" title="讓學生跟寫程式更熟一點"></a>讓學生跟寫程式更熟一點</h2><p>實際的提供並示範寫程式的基本元素，判斷式、迴圈、函式。解題的過程也可以建立寫程式的自信。<br>因為老師主要專長是 JavaScript，所以對正在學習 JavaScript 的人來說更有幫助，同時可以學到一些 JavaScript 的函式、方法，以及他們的用法及原理。<br>也稍稍提到了我之前一直沒有弄明白的 Callback function 概念，在解題應用上還沒辦法很自然的使用，可是至少更看的懂別人的程式。</p><h2 id="演算法基礎"><a href="#演算法基礎" class="headerlink" title="演算法基礎"></a>演算法基礎</h2><p>簡單的講解了時間、空間複雜度、Big O、一些基礎的排序、搜尋演算法，其實演算法也不是什麼魔法，只是需要個引路人罷了（好像就算是魔法也只是需要個引路人……），專業的教練還是很重要的。</p><h2 id="其它相關或不相關知識"><a href="#其它相關或不相關知識" class="headerlink" title="其它相關或不相關知識"></a>其它相關或不相關知識</h2><p>中華民國身份證的檢查公式、信用卡的驗證公式、費式數列(費波那契數列)、迴文的英文（怕林老木……其實還是記不起來）、二進位、三進位、九進位。</p><p>整體而言，短短的課程雖然連個凸肚 List 都沒做出來，但是對程式思考、寫程式、瞭解基礎演算法是很有幫助的。</p><p>一個雞蛋裡挑骨頭的批評，就是胡老師您的英文發音還有些進步的空間，其實我也知道發音不是最重要的（像我自已拼音很差，可能是比發音不好還嚴重的問題），但是單元 9.1 的影片三分鐘處，我還真的想說「牛排」（steak）也是一種資料結構？！ 拿去餵狗才發現原來是在講「堆疊」（stack）。所以有時候發音還是蠻重要的……</p><p>喔，還有，我私自把課程英文名稱叫做 “Don’t LeetCode Yet”，是覺得 “Too Weak To LeetCode” 太嘲諷了啦！</p><p>總之，感謝胡立，GJ 胡立！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;胡立在 Lidemy 上最新的課程&lt;a href=&quot;https://lidemy.com/courses/enrolled/793973&quot;&gt;先別急著寫 LeetCode&lt;/a&gt;，大概花三週的時間上完課，是個很不錯的程式思考、演算法入門課程，適合剛開始學寫程式的人。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
    <category term="Review" scheme="https://jas0nhuang.github.io/tags/Review/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 9 - Data Structure Intro</title>
    <link href="https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-9/"/>
    <id>https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-9/</id>
    <published>2020-05-02T04:28:18.000Z</published>
    <updated>2023-05-12T15:00:02.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Importance-of-Data-Structure"><a href="#Importance-of-Data-Structure" class="headerlink" title="Importance of Data Structure"></a>Importance of Data Structure</h2><p>How important is Data Structure? VERY IMPORTANT!<br>Different scinario needs different data structure.</p><p>Array in JavaScript is more than array.<br>JavaScript just made it too convinent with array, object…etc.<br>Like: .push,  .pop,  .shift,  .unshift… method in array.<br>It behaves more like queue or stack (STEAK XD)</p><p>Object in JavaScript can be used as map.</p><p>Some common data structures:</p><ul><li>Linked list</li><li>Queue</li><li>Stack</li><li>Hash Table</li><li>Tree</li></ul><h3 id="Take-SET-as-example"><a href="#Take-SET-as-example" class="headerlink" title="Take SET [] as example"></a>Take SET [] as example</h3><ol><li>push</li><li>remove</li><li>isExist</li></ol><p>Definition of SET data structure: One element can only appear once.(unique values)<br>Throw 1 1 2 2 3 3 4 into a SET, we can get 1 2 3 4</p><h3 id="Queue-VS-Array"><a href="#Queue-VS-Array" class="headerlink" title="Queue VS Array"></a>Queue VS Array</h3><p>queue.enqueue<br>queue.front<br>queue.dequeue</p><h2 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h2><h3 id="different-Sorting-Algorithm"><a href="#different-Sorting-Algorithm" class="headerlink" title="different Sorting Algorithm"></a>different Sorting Algorithm</h3><p>Bubble sort, Merge sort, Selection sort, Insertion sort, </p><p><a href="https://lidemy.com/courses/389485/lectures/5943009">Lidemy-排序方式簡介</a><br><a href="https://visualgo.net/">VISUALGO</a>: Nice visualising site.</p><h3 id="LIOJ-1035"><a href="#LIOJ-1035" class="headerlink" title="LIOJ 1035"></a>LIOJ 1035</h3><p>Since the range is numbers from 1 to 100, we can make an array of 100 0s (index[0]- index[99])<br>And +1 on that index every times a number has been found.<br>Array &#x3D; [1,4,4,3,4] &gt;  zeroArray &#x3D; [0,0,0,0,0,0,0…..]<br>zeroArray &#x3D; [1, 0, 1, 3, 0, 0, 0, 0…..]<br>output &#x3D; [1, 3, 4, 4, 4,]</p><p>Counting sort</p><h3 id="LIOJ-1047"><a href="#LIOJ-1047" class="headerlink" title="LIOJ 1047"></a>LIOJ 1047</h3><p>binary search</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let L = 0</span><br><span class="line">let R = arr.length-1</span><br><span class="line">let M = Math.floor(arr.length/2)</span><br><span class="line">if(q &gt; arr[R] || q &lt; arr[L])&#123;</span><br><span class="line">    return -1</span><br><span class="line">&#125;</span><br><span class="line">while(end - start &gt; 1)&#123;</span><br><span class="line">    if(q==arr[L])&#123;</span><br><span class="line">        return L</span><br><span class="line">    &#125; else if (q== arr[R])&#123;</span><br><span class="line">        return R</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if(q==arr[M])&#123;</span><br><span class="line">            return M</span><br><span class="line">        &#125; else if (q &lt; arr[M])&#123;</span><br><span class="line">            R = M</span><br><span class="line">            M = Math.floor((L+M)/2)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            L = M</span><br><span class="line">            M = Math.floor((M+R)/2)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">return -1</span><br></pre></td></tr></table></figure><h3 id="LIOJ-1048"><a href="#LIOJ-1048" class="headerlink" title="LIOJ 1048"></a>LIOJ 1048</h3><p>If all numbers are positive there will not be any problem.<br>Here we can just loop thorugh the array, add all the numbers already passed.<br>If the sum of X ~ (Y-1) is smaller than Y, then we can ditch the sum of X ~ Y-1.<br>It actually means if X add to Y-1 is negative…<br>Rather than writing this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (arr[i]+currentSum &gt; arr[i])&#123;</span><br><span class="line">    currentSum += arr[i]</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    currentSum = arr[i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This might be easier to understand?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(currentSum &lt; 0)&#123;</span><br><span class="line">    currentSum = arr[i]</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    currentSum += arr[i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Importance-of-Data-Structure&quot;&gt;&lt;a href=&quot;#Importance-of-Data-Structure&quot; class=&quot;headerlink&quot; title=&quot;Importance of Data Structure&quot;&gt;&lt;/a&gt;Im</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 8 - Algorithm Intro</title>
    <link href="https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-8/"/>
    <id>https://jas0nhuang.github.io/2020/05/02/alg101-dont-leetcode-yet-8/</id>
    <published>2020-05-02T04:28:11.000Z</published>
    <updated>2023-05-12T15:00:02.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction-to-Algorithm"><a href="#Introduction-to-Algorithm" class="headerlink" title="Introduction to Algorithm"></a>Introduction to Algorithm</h2><p>Algorithm efficiency</p><p>Time complexity VS Space complexity</p><h3 id="Big-O-notation"><a href="#Big-O-notation" class="headerlink" title="Big O notation"></a>Big O notation</h3><p>O(n)    processing steps increase linearly to the size of the input(amount of data).<br>O(2^n)  yes&#x2F;no questions<br>O(1)    always 1<br>O(log n)</p><p>Most of the time we can’t get both Time and Space efficiency. But we can use one to exchange for the other.</p><h3 id="How-many-time-will-it-take-to-count-1-to-1-billion"><a href="#How-many-time-will-it-take-to-count-1-to-1-billion" class="headerlink" title="How many time will it take to count 1 to 1 billion?"></a>How many time will it take to count 1 to 1 billion?</h3><p>ONLY around 100ms. Computer is actually really powerful.</p><h3 id="LIOJ-1035-sorting"><a href="#LIOJ-1035-sorting" class="headerlink" title="LIOJ 1035 sorting"></a>LIOJ 1035 sorting</h3><p>Use <code>.sort()</code> method.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arr.sort(function(a,b)&#123;</span><br><span class="line">    return a-b</span><br><span class="line">    // a-b means sorting from low to high. b-a will sort  from hight to low.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LIOJ-1047-search"><a href="#LIOJ-1047-search" class="headerlink" title="LIOJ 1047 search"></a>LIOJ 1047 search</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let [n, m] = lines[0].split(&quot; &quot;)</span><br></pre></td></tr></table></figure><p>Is it a must to write a SEARCH function?</p><h3 id="LIOJ-1048"><a href="#LIOJ-1048" class="headerlink" title="LIOJ 1048"></a>LIOJ 1048</h3><p>Was also the problem with data type(string or number)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for()&#123;</span><br><span class="line">    for()&#123;</span><br><span class="line">        for()&#123;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>~&#x3D; O(n^3)</p><h3 id="LIOJ-1049"><a href="#LIOJ-1049" class="headerlink" title="LIOJ 1049"></a>LIOJ 1049</h3><p>NEED TO <code>.map(Number)</code> when getting the array or else the array elements will be stored as strings, and get a Time Limit Excieded upon submission.<br>Even if you do <code>Math.abs(Number(arrayX[i])-Number(arrayY[j]))</code> inside the for loop.<br>O(n*m)<br>For more efficient solution, think of the “sorted” fact given in the description.</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>O(n^2) &gt; O(n)<br>O(n) ~&#x3D; O(100n)</p><h3 id="LIOJ-1050"><a href="#LIOJ-1050" class="headerlink" title="LIOJ 1050"></a>LIOJ 1050</h3><p>Brute forced!<br>Store the number array into an object:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    1: index0,</span><br><span class="line">    3: index1,</span><br><span class="line">    5: index2,</span><br><span class="line">    7: index3</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Search inside the object for the two sum.</p><h3 id="LIOJ-1051"><a href="#LIOJ-1051" class="headerlink" title="LIOJ 1051"></a>LIOJ 1051</h3><p>Merge Sort</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Introduction-to-Algorithm&quot;&gt;&lt;a href=&quot;#Introduction-to-Algorithm&quot; class=&quot;headerlink&quot; title=&quot;Introduction to Algorithm&quot;&gt;&lt;/a&gt;Introductio</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 7 - NPSC Problems</title>
    <link href="https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-7/"/>
    <id>https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-7/</id>
    <published>2020-04-23T09:32:21.000Z</published>
    <updated>2023-05-12T15:00:02.633Z</updated>
    
    <content type="html"><![CDATA[<p>NPSC &#x3D; National Problem Solving Contest</p><ol><li>Contest for middle school students. Some problems are easy. </li><li>Problems are interesting.</li><li>Can find all test cases.</li><li>Can know the difficulty via score board.</li></ol><h3 id="How-to-use-the-test-cases-of-NPSC"><a href="#How-to-use-the-test-cases-of-NPSC" class="headerlink" title="How to use the test cases of NPSC"></a>How to use the test cases of NPSC</h3><p><code>cat pa.in | node code.js | diff pa.out -</code></p><h3 id="new-line-character"><a href="#new-line-character" class="headerlink" title="new line character"></a>new line character</h3><p><code>xxd</code> lets you read a file in HEX code. Cool!<br>Newline character “0d0a” VS “0a” VS “0d”.<br>Strip them with <code>diff --strip-trailing-cr</code>.</p><h3 id="LIOJ-1008"><a href="#LIOJ-1008" class="headerlink" title="LIOJ 1008"></a>LIOJ 1008</h3><p>Knowledge about binary.<br><code>(A NUMBER).toString(2)</code> will give the binary number of <code>A NUMBER</code>. This problem is actually trying to find how many 1s in a binary number. And this made me think about problem 1014</p><h3 id="LIOJ-1009"><a href="#LIOJ-1009" class="headerlink" title="LIOJ 1009"></a>LIOJ 1009</h3><p>Simple reverse<br>Write function your self or use the built-in <code>.reverse</code> method.</p><h3 id="LIOJ-1013"><a href="#LIOJ-1013" class="headerlink" title="LIOJ 1013"></a>LIOJ 1013</h3><p>Fibonacci number<br>code on Wikipedia</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function fibon(n) &#123;</span><br><span class="line">    var fib_n = function(curr, next, n) &#123;</span><br><span class="line">        if (n == 0) &#123;</span><br><span class="line">            return curr;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return fib_n(next, curr+next, n-1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return fib_n(0, 1, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LIOJ-1014"><a href="#LIOJ-1014" class="headerlink" title="LIOJ 1014"></a>LIOJ 1014</h3><p>Nonary system (counting without nine).<br>parseInt(NUMBER, BASE)<br><code>parsInt(100, 9) == 81</code><br>Nonary 100 &#x3D; 9^ 0* 0 + 9^ 1* 0 + 9^ 2* 1<br><code>parsInt(33, 9) == 30</code><br>Nonary 33 &#x3D; 9^ 0* 3 + 9^ 1* 3</p><h3 id="LIOJ-1016"><a href="#LIOJ-1016" class="headerlink" title="LIOJ 1016"></a>LIOJ 1016</h3><p>For this part:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">else if(counterA &gt; counterB)&#123;</span><br><span class="line">    for(i=1; i&lt;lines.length; i++)&#123;</span><br><span class="line">        if(arr[i] == &quot;B&quot;)&#123;</span><br><span class="line">            console.log(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    for (i=1; i&lt;lines.length; i++)&#123;</span><br><span class="line">        if (arr[i] == &quot;A&quot;)&#123;</span><br><span class="line">            console.log(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>We can replace it with “conditional (ternary) operator”:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">else&#123;</span><br><span class="line">    let luuser = counterA &gt; counterB ? &quot;B&quot;:&quot;A&quot;</span><br><span class="line">    // Same as:</span><br><span class="line">    // if (counterA &gt; counterB) &#123; luuser=&quot;B&quot; &#125; else &#123; luuser=&quot;A&quot; &#125;</span><br><span class="line">    for(i=1; i&lt;lines.length; i++)&#123;</span><br><span class="line">        if(luuser == lines[i])&#123;</span><br><span class="line">            console.log(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;NPSC &amp;#x3D; National Problem Solving Contest&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Contest for middle school students. Some problems are easy. &lt;/li&gt;
&lt;li&gt;Problems </summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 6 - DIY Built-In Functions</title>
    <link href="https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-6/"/>
    <id>https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-6/</id>
    <published>2020-04-23T09:32:17.000Z</published>
    <updated>2023-05-12T15:00:02.632Z</updated>
    
    <content type="html"><![CDATA[<p>Understand and try to build the built-in functions&#x2F;methods by our selves.</p><h2 id="Built-in-Array-x2F-String-Methods"><a href="#Built-in-Array-x2F-String-Methods" class="headerlink" title="Built-in Array&#x2F;String Methods"></a>Built-in Array&#x2F;String Methods</h2><h3 id="Array-map"><a href="#Array-map" class="headerlink" title="Array.map()"></a>Array.map()</h3><p>“The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.”</p><p>Need some time for NOOBS to get used to the usage of CALLBACK functions.</p><p>The <code>.map()</code> can create a new array.<br>example:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let arr = [1,2,3,4,5]</span><br><span class="line"></span><br><span class="line">function map(arr, callback)&#123;</span><br><span class="line">    let outputArr = []</span><br><span class="line">    for (let i=0; i&lt;arr.length; i++)&#123;</span><br><span class="line">        outputArr.push(callback(arr[i]))</span><br><span class="line">    &#125;</span><br><span class="line">    return outputArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function double(n)&#123;</span><br><span class="line">    return n*2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(map(arr, double))</span><br><span class="line">// output : [2, 4, 6, 8, 10]</span><br></pre></td></tr></table></figure><p>This is the same as:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arr.map(double)</span><br></pre></td></tr></table></figure><h3 id="String-repeat"><a href="#String-repeat" class="headerlink" title="String.repeat"></a>String.repeat</h3><p>REPEAT a string!</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let str = &quot;ABCDE&quot;</span><br><span class="line"></span><br><span class="line">function repeat(str, times)&#123;</span><br><span class="line">    let outputStr = &quot;&quot;</span><br><span class="line">    for (let i=0; i&lt;times; i++)&#123;</span><br><span class="line">        outputStr += str</span><br><span class="line">    &#125;</span><br><span class="line">    return outputStr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(repeat(str, 3))</span><br><span class="line">// output : &quot;ABCDEABCDEABCDE&quot;</span><br></pre></td></tr></table></figure><p>Same as:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;ABCDE&quot;.repeat(3)</span><br></pre></td></tr></table></figure><h3 id="Array-lastIndexOf"><a href="#Array-lastIndexOf" class="headerlink" title="Array.lastIndexOf"></a>Array.lastIndexOf</h3><p>Related to <code>.indexOf</code> method.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log([1,2,3,1].indexOf(4))</span><br><span class="line">// -1</span><br><span class="line">console.log([1,2,3,1].indexOf(2))</span><br><span class="line">// 1</span><br><span class="line">console.log([1,2,3,1].indexOf(1))</span><br><span class="line">// 0 (it returns only the first found)</span><br></pre></td></tr></table></figure><p>So the <code>.lastIndexOf</code> finds the element starting from the last one.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let arr = [1,2,3,1]</span><br><span class="line"></span><br><span class="line">function lIF(arr, num)&#123;</span><br><span class="line">    let indexNum = -1</span><br><span class="line">    for (let i=arr.length-1; i&gt;0; i--)&#123;</span><br><span class="line">        if(arr[i] === num)&#123;</span><br><span class="line">            indexNum = i</span><br><span class="line">            break</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return indexNum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(lIF(arr, 1))</span><br><span class="line">// 3 (Returns the last one in the array.)</span><br></pre></td></tr></table></figure><p>Same as:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(arr.lastIndexOf(1)</span><br></pre></td></tr></table></figure><h2 id="Project-Unit-6"><a href="#Project-Unit-6" class="headerlink" title="Project Unit 6"></a>Project Unit 6</h2><h3 id="LIOJ-1036-Array-reverse"><a href="#LIOJ-1036-Array-reverse" class="headerlink" title="LIOJ 1036 Array.reverse"></a>LIOJ 1036 Array.reverse</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function reverse(arr)</span><br><span class="line">    let revArr = []</span><br><span class="line">    for (let i = arr.length-1; i &gt; 0; i--)&#123;</span><br><span class="line">        revArr.push(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">    return r evArr</span><br><span class="line">&#125;</span><br><span class="line">console.log(reverse([1,2,3,4,5])</span><br><span class="line">// [5,4,3,2,1]</span><br></pre></td></tr></table></figure><h3 id="LIOJ-1037-Array-filter"><a href="#LIOJ-1037-Array-filter" class="headerlink" title="LIOJ 1037 Array.filter"></a>LIOJ 1037 Array.filter</h3><p>I accidentally used the built-in <code>.filter</code> method when I try to solve the problem the first time.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let newArr = orgArr.filter(findthenum)</span><br></pre></td></tr></table></figure><p>This is actually a good practice to get familiar with the basic of how to use the callback function.</p><ul><li>Main function: <code>myFilter(arr, findTarget)</code>, no need to pass in any argument when calling the callback(<code>findTarget</code> in this case)</li><li>Function used as callback in the main function: <code>findTarget</code></li><li>Check if callback function returns anything, if yes push it into the new array.</li></ul><p>Some improvements:</p><ul><li><code>return n != target</code> is the same as <code>if (n != target)&#123; return n&#125;</code></li></ul><p>The instructor talked about the “arrow function” in ES6. And how to use the filter method.<br>An example of the usage of <code>.filter()</code> is <code>arr.filter(x =&gt; x &gt; 2)</code>.<br>The <code>x =&gt; x &gt; 2</code> is an arrow function.<br>So the <code>findTarget()</code> function can also be written as:<br><code>let findTarget = n =&gt; n !== target</code><br>Or we can also directly put it in the <code>myFilter()</code> function: <code>function myFilter(arr, n =&gt; n !== target)</code></p><h3 id="LIOJ-1038-Array-indexOf"><a href="#LIOJ-1038-Array-indexOf" class="headerlink" title="LIOJ 1038 Array.indexOf"></a>LIOJ 1038 Array.indexOf</h3><p>EASY! If you can solve problem 1037. Don’t even need a callback function, can directly give the target as argument.</p><h3 id="LIOJ-1039-1040-1042"><a href="#LIOJ-1039-1040-1042" class="headerlink" title="LIOJ 1039, 1040, 1042"></a>LIOJ 1039, 1040, 1042</h3><p>Array.fill, Array.join, String.toLowerCase</p><p>[1,2,3,4].join(“&#x2F;“) &#x3D;&gt; “1&#x2F;2&#x2F;3&#x2F;4”</p><h3 id="LIOJ-1041-Array-trim"><a href="#LIOJ-1041-Array-trim" class="headerlink" title="LIOJ 1041 Array.trim"></a>LIOJ 1041 Array.trim</h3><p>I tried to count the white space before the words and after the words. Then make a new string out of those index number.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (i = preCounter; i &lt; orgString.length-postCounter; i++)&#123;</span><br><span class="line">    newString += orgString[i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Instructor trim the white space before the words first then trim the white space after the words. Test if we MEET a letter!</p><h3 id="LIOJ-1043-String-endsWith"><a href="#LIOJ-1043-String-endsWith" class="headerlink" title="LIOJ 1043 String.endsWith"></a>LIOJ 1043 String.endsWith</h3><p>Instructor’s solution:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">......</span><br><span class="line">console.log(endsWith(lines[0], lines[1]) ? &quot;true&quot; : &quot;false&quot;)</span><br><span class="line"></span><br><span class="line">let strInd = str.length-1</span><br><span class="line">let sStrInd = searchString.length-1</span><br><span class="line">while (sStrInd &gt;= 0)&#123;</span><br><span class="line">    .........</span><br><span class="line">    strIndex --</span><br><span class="line">    sStrInd --</span><br><span class="line">    ......... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LIOJ-1044-1045"><a href="#LIOJ-1044-1045" class="headerlink" title="LIOJ 1044, 1045"></a>LIOJ 1044, 1045</h3><p>String.padEnd, String.slice</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Understand and try to build the built-in functions&amp;#x2F;methods by our selves.&lt;/p&gt;
&lt;h2 id=&quot;Built-in-Array-x2F-String-Methods&quot;&gt;&lt;a href=&quot;#B</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 5 - Classic Problems</title>
    <link href="https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-5/"/>
    <id>https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-5/</id>
    <published>2020-04-23T09:32:14.000Z</published>
    <updated>2023-05-12T15:00:02.630Z</updated>
    
    <content type="html"><![CDATA[<p>10 classic problems. Try not to use built-in functions&#x2F;methods but only iteration, condition, and self-written functions.<br>Only use the necessary ones: <code>split()</code>, <code>floor()</code> ……</p><h3 id="Check-arithmetic-sequence"><a href="#Check-arithmetic-sequence" class="headerlink" title="Check arithmetic sequence"></a>Check arithmetic sequence</h3><p>Loop through 0 to input.length-2, and let num1 &#x3D; input[0], num2 &#x3D; input[1], num3&#x3D;[2]<br>Check if they have the same subtraction value.<br>Better check for edge case like only 1 or 2 numbers, input strings, no input…etc.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function isArith(input) &#123;</span><br><span class="line">    if (input.length &lt;= 2)&#123;</span><br><span class="line">        if (input.length === 0 || isNaN(input[0]) || isNaN(input[1]))&#123;</span><br><span class="line">            console.log(&quot;NG&quot;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(&quot;OK&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        for (i=0;i&lt;input.length-2;i++)&#123;</span><br><span class="line">            let num1 = input[i]</span><br><span class="line">            let num2 = input[i+1]</span><br><span class="line">            let num3 = input[i+2]</span><br><span class="line">            if (num2-num1 != num3-num2)&#123;</span><br><span class="line">                console.log(&quot;NG&quot;)</span><br><span class="line">                return</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&quot;OK&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Check-Taiwan-ID"><a href="#Check-Taiwan-ID" class="headerlink" title="Check Taiwan ID"></a>Check Taiwan ID</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function TWIDChecker(input)&#123;</span><br><span class="line">    let TWID = i nput</span><br><span class="line">    let firstLetter = TWID[0]</span><br><span class="line"></span><br><span class="line">    function TWIDnumbersSum(TWID)&#123;</span><br><span class="line">        let numberSum = 0 </span><br><span class="line">        for (let i=1;i&lt;TWID.length-1;i++)&#123;</span><br><span class="line">            numberSum += (Number(TWID[i]) * (9-i))</span><br><span class="line">        &#125;</span><br><span class="line">        return (numberSum + Number(TWID[9]))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function letterToNumber(firstLetter)&#123;</span><br><span class="line">        let letters = </span><br><span class="line">            [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,</span><br><span class="line">            &quot;J&quot;,&quot;K&quot;,&quot;&quot;,&quot;M&quot;,&quot;N&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;&quot;,&quot;&quot;,</span><br><span class="line">            &quot;T&quot;,&quot;U&quot;,&quot;V&quot;,&quot;X&quot;,&quot;&quot;,&quot;W&quot;,&quot;Z&quot;,&quot;I&quot;,&quot;O&quot;]</span><br><span class="line">        for (let i=0;i&lt;letters.length;i++)&#123;</span><br><span class="line">            if (letters[i]==firstLetter)&#123;</span><br><span class="line">                let nums = []</span><br><span class="line">                let Sum = 0</span><br><span class="line">                let orgNum= i+10</span><br><span class="line">                for (let j=0; j&lt;2;j++)&#123;</span><br><span class="line">                    nums.push(orgNum % 10)</span><br><span class="line">                    orgNum = Math.floor(orgNum/10)</span><br><span class="line">                &#125;</span><br><span class="line">                Sum = nums[0]*9 + nums[1]*1</span><br><span class="line">                return Sum</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    let TOTLESum = Number(TWIDnumbersSum(TWID))+Number(letterToNumber(firstLetter))</span><br><span class="line">    if (TOTLESum % 10 === 0)&#123;</span><br><span class="line">        console.log(&quot;OK&quot;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        console.log(&quot;NG&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-up-all-digits-in-a-number"><a href="#Add-up-all-digits-in-a-number" class="headerlink" title="Add up all digits in a number"></a>Add up all digits in a number</h3><h2 id="Project-5"><a href="#Project-5" class="headerlink" title="Project 5"></a>Project 5</h2><h3 id="LIOJ-problem-1026"><a href="#LIOJ-problem-1026" class="headerlink" title="LIOJ problem 1026"></a>LIOJ problem 1026</h3><p>Check Geometric sequence<br>Same as Arithmetic sequence</p><h3 id="LIOJ-problem-1027"><a href="#LIOJ-problem-1027" class="headerlink" title="LIOJ problem 1027"></a>LIOJ problem 1027</h3><p>Check Credit card number</p><h3 id="LIOJ-problem-1028"><a href="#LIOJ-problem-1028" class="headerlink" title="LIOJ problem 1028"></a>LIOJ problem 1028</h3><p>I didn’t think about the birthdays like “2999 6 30” or “3999 12 31”, so I use <code>if</code> while checking if the number is more than 2 digits, witch will only check once.<br>But here we need to use <code>while</code> in order to loop through all the cases(in case there are more than 3 digits):</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while (lifeCode &gt;= 10)&#123;</span><br><span class="line">    lifeCode = (lifeCode % 10) + Math.floor(lifeCode/10)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LIOJ-problem-1034"><a href="#LIOJ-problem-1034" class="headerlink" title="LIOJ problem 1034"></a>LIOJ problem 1034</h3><p>When try to find the new ASCII code, if the added number is more than 27, there will be a problem if we only subtract 26.<br>ex: <code>z</code> will become <code>&#123;</code> adding 26<br><code>a</code> will also become <code>&#123;</code> adding 52.<br>So the added number should be divided by 26 and use the remainder.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let newCharCode = orgStr.charCodeAt(i)+addNum % 26</span><br><span class="line">if (newCharCode&gt;122)&#123;</span><br><span class="line">    newCharCode -=26</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LIOJ-problem-1030"><a href="#LIOJ-problem-1030" class="headerlink" title="LIOJ problem 1030"></a>LIOJ problem 1030</h3><p>Check if it’s PALINDROME (what a word!)<br>Two ways : 1. Reverse the original string 2. Compaire the (first + n) and (last - n) character…etc.</p><h3 id="LIOJ-problem-1031"><a href="#LIOJ-problem-1031" class="headerlink" title="LIOJ problem 1031"></a>LIOJ problem 1031</h3><p>Square pyramidal number sequence<br>1 + 121 + 12321 + 1234321 +  ……</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function solve(lines)&#123;</span><br><span class="line">    let startNum = 1</span><br><span class="line">    let endNum = Math.floor(Math.sqrt(lines[0]))</span><br><span class="line">    let times = endNum * 10 / 2</span><br><span class="line">    let countNum1 = (endNum + startNum) * times / 10</span><br><span class="line">    let countNum2 = 0</span><br><span class="line">    for (i=1;i&lt;=endNum;i++)&#123;</span><br><span class="line">        countNum2 += i * (endNum + 1 - i)</span><br><span class="line">    &#125;</span><br><span class="line">    let finalNum = countNum2 * 2 - countNum1</span><br><span class="line">    console.log(finalNum)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Or just simply check if a number is squared, and add them up!</p><h3 id="LIOJ-problem-1032"><a href="#LIOJ-problem-1032" class="headerlink" title="LIOJ problem 1032"></a>LIOJ problem 1032</h3><p>Practice the usage of Math.sart, Math.abs, Math.toFixed()</p><h3 id="LIOJ-problem-1033"><a href="#LIOJ-problem-1033" class="headerlink" title="LIOJ problem 1033"></a>LIOJ problem 1033</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let dots =[]</span><br><span class="line">dots.push&#123;</span><br><span class="line">    x: temp[0],</span><br><span class="line">    y: temp[1]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This will get the data look like:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#123;x:1, y:2&#125;,</span><br><span class="line">&#123;x:3, y:5&#125;,</span><br><span class="line">&#123;x:10, y:13&#125;]</span><br></pre></td></tr></table></figure><h3 id="LIOJ-problem-1046"><a href="#LIOJ-problem-1046" class="headerlink" title="LIOJ problem 1046"></a>LIOJ problem 1046</h3><p>Brute-force or some simple loops for 3 vertical and 3 horizontal lines<br>multidimensional arrays</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;10 classic problems. Try not to use built-in functions&amp;#x2F;methods but only iteration, condition, and self-written functions.&lt;br&gt;Only us</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 4 - Let&#39;s Code</title>
    <link href="https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-4/"/>
    <id>https://jas0nhuang.github.io/2020/04/23/alg101-dont-leetcode-yet-4/</id>
    <published>2020-04-23T09:32:09.000Z</published>
    <updated>2023-05-12T15:00:02.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="From-Pseudocode-to-Actual-code"><a href="#From-Pseudocode-to-Actual-code" class="headerlink" title="From Pseudocode to Actual code"></a>From Pseudocode to Actual code</h2><h3 id="Function-filling"><a href="#Function-filling" class="headerlink" title="Function filling"></a>Function filling</h3><p>Write down the action inside the main structure first!</p><p>Example LIOJ problem 1020<br>Li’s solution:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if( X is Prime)&#123;&#125;</span><br><span class="line">function isPrime&#123;&#125;</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isPrime(X))&#123;</span><br><span class="line">&#125;</span><br><span class="line">function isPrime(n)&#123;</span><br><span class="line">    if (n===1) &#123;</span><br><span class="line">        return false</span><br><span class="line">    &#125;</span><br><span class="line">    for (let i = 2; i&lt;n; i++)&#123;</span><br><span class="line">        if (n % i === 0)&#123;</span><br><span class="line">        return false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Divide problem into small pieces: Find Prime numbers in an array &#x3D; List the array + check if it is prime<br>Nested loop</p><h3 id="Simplify-the-problem"><a href="#Simplify-the-problem" class="headerlink" title="Simplify the problem"></a>Simplify the problem</h3><p>Solve the simplified problem first.</p><p>Example LIOJ problem 1021<br>print a star pyramid:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br></pre></td></tr></table></figure><p>If we don’t know how to print multiple stars in one line, print out 1 star for each line first.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (let i=1;i&lt;=N; i++)&#123;</span><br><span class="line">    printStar(i) //put a function here as the first tip</span><br><span class="line">&#125;</span><br><span class="line">function printStar(n)&#123;</span><br><span class="line">    let = starString =&quot;&quot; </span><br><span class="line">    for(let j = 1; j&lt;=n; j++)&#123;</span><br><span class="line">        starString += &quot;*&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(starString)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Don’t really need <code>.repeat()</code> method</p><h3 id="Programing-San-Bao"><a href="#Programing-San-Bao" class="headerlink" title="Programing San-Bao"></a>Programing San-Bao</h3><p>Iteration ,Function, Condition<br>Try not to solve problem with built-in function&#x2F;method but the San-Bao (like the <code>.repeat()</code> method above.)</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><h3 id="LIOJ-problem-1022-print-the-star-pyramid"><a href="#LIOJ-problem-1022-print-the-star-pyramid" class="headerlink" title="LIOJ problem 1022 print the star pyramid"></a>LIOJ problem 1022 print the star pyramid</h3><ol><li>First write down the basic structure:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function solve(lines)&#123;</span><br><span class="line">    for (let i=1; i&lt;=lines[0]; i++)&#123; </span><br><span class="line">        printStars(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function printStars(n)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>then fill in the <code>printStars()</code> function. When trying to write the detail of this function, I figured out that we need to pass two arguments inside. It means that I NEED TO FIND THE LOGIC before solving the problem.</li></ol><p>Logic from the instructor:</p><ul><li>Need to print out N lines</li><li>The line i will have 2i-1 stars</li><li>stars need to be centered</li><li>need N-i white space in front of each line</li></ul><p>My solution logic:</p><ul><li>Print out N lines</li><li>Print out the space in front, so the i will start from N and decreasing</li><li>Each line will have i-1 spaces</li><li>add the stars after the spaces: 1 initial star for each line + 2(N-i) stars for each line</li></ul><p>The instructor used a support function to do the repetition</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function repeat(str, n)&#123;</span><br><span class="line">    let  s = &quot;&quot;</span><br><span class="line">    for (let i=1; i&lt;=n; i++)&#123;</span><br><span class="line">        s += str</span><br><span class="line">    &#125;</span><br><span class="line">    return s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Multiplication-table"><a href="#Multiplication-table" class="headerlink" title="Multiplication table"></a>Multiplication table</h3><p>Practice nested loop</p><h3 id="Find-Square-numbers"><a href="#Find-Square-numbers" class="headerlink" title="Find Square numbers"></a>Find Square numbers</h3><p>My solution:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var divisor = lines[0]</span><br><span class="line">if (lines[0] != 1)&#123;</span><br><span class="line">    div = div / 2</span><br><span class="line">&#125;</span><br><span class="line">for (let i = 1; i &lt;=lines[0]; i++)&#123;</span><br><span class="line">    for (let j = 1; j &lt;=divisor; j++)&#123;</span><br><span class="line">        if (i / j === j)&#123;</span><br><span class="line">            console.log(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Instructor’s solution:</p><ol><li><code>Math.sqrt()</code> or <code>Math.floor()</code></li><li>Loop through all square numbers under 100 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while(i*i &lt;=100)&#123;</span><br><span class="line">    console.log(i*i)</span><br><span class="line">    i++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Project-4"><a href="#Project-4" class="headerlink" title="Project 4"></a>Project 4</h2><h3 id="Print-a-tree"><a href="#Print-a-tree" class="headerlink" title="Print a tree"></a>Print a tree</h3><p>Like printing a pyramid, just add the trunk.<br>And maybe make it prettier:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function solve(lines) &#123;</span><br><span class="line">    totalLines = lines[0]</span><br><span class="line">    for (let i=1; i&lt;=lines[0];i++)&#123;</span><br><span class="line">       printPyramid(i, lines[0])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function printPyramid(n, l)&#123;</span><br><span class="line">        let starStr = &quot;*&quot;</span><br><span class="line">        if (n != 1)&#123;</span><br><span class="line">            for(let i=1;i&lt;n;i++)&#123;</span><br><span class="line">               starStr += &quot;**&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(repeatMe((l-n), &quot; &quot;) + starStr)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(let i=1;i&lt;(totalLines/2);i++)&#123;</span><br><span class="line">        console.log(repeatMe((totalLines -2) , &quot; &quot;) + &quot;|||&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function repeatMe(counter, toPrint)&#123;</span><br><span class="line">        let Str = &quot;&quot;</span><br><span class="line">        for (i=1; i &lt;= counter;i++)&#123;</span><br><span class="line">            Str += toPrint</span><br><span class="line">        &#125;</span><br><span class="line">        return Str</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="N-M-multiplication-table"><a href="#N-M-multiplication-table" class="headerlink" title="N M multiplication table"></a>N M multiplication table</h3><h3 id="Find-Narcissistic-numbers"><a href="#Find-Narcissistic-numbers" class="headerlink" title="Find Narcissistic numbers"></a>Find Narcissistic numbers</h3><p>NumI &#x3D; NumI[0]^NumI.length + …… + NumI[NumI.length]^NumI.length</p><ul><li>Loop through Number I - j</li><li>check if it returns true<br>I put the numbers into array to get each digit.<br>Didn’t pay attention to the input so got several “Wrong Answer” submitions.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;From-Pseudocode-to-Actual-code&quot;&gt;&lt;a href=&quot;#From-Pseudocode-to-Actual-code&quot; class=&quot;headerlink&quot; title=&quot;From Pseudocode to Actual code&quot;&gt;</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 3 - Understand the Problem</title>
    <link href="https://jas0nhuang.github.io/2020/04/11/alg101-dont-leetcode-yet-3/"/>
    <id>https://jas0nhuang.github.io/2020/04/11/alg101-dont-leetcode-yet-3/</id>
    <published>2020-04-11T04:14:51.000Z</published>
    <updated>2023-05-12T15:00:02.627Z</updated>
    
    <content type="html"><![CDATA[<p>Reading comprehension? Yes! and No! Also pay attention to input range.</p><h2 id="Translate-the-problem-into-simple-language"><a href="#Translate-the-problem-into-simple-language" class="headerlink" title="Translate the problem into simple language"></a>Translate the problem into simple language</h2><h3 id="LIOJ-problem-1008"><a href="#LIOJ-problem-1008" class="headerlink" title="LIOJ problem 1008"></a>LIOJ problem 1008</h3><p>Know the input range? Maximum exponent 31 of 2.</p><h3 id="3-main-limitations"><a href="#3-main-limitations" class="headerlink" title="3 main limitations"></a>3 main limitations</h3><ol><li>Space (memory space)<br> int: 4 bytes<br> double: 8 bytes<br> Number in JavaScript: 8 bytes</li><li>Time<br> Not very important for beginner.<br> big O</li><li>Type<br>data type:<br>int: -2 ^ 31 ~ 2 ^ 31<br>Max integer in JavaScript: Number.MAX_SAFE_INTEGER<br>floating point numbers precision problem</li></ol><p>IMPORTANT! Know the range before coding!</p><h3 id="Know-the-input-x2F-output-method"><a href="#Know-the-input-x2F-output-method" class="headerlink" title="Know the input&#x2F;output method"></a>Know the input&#x2F;output method</h3><h2 id="Project-3"><a href="#Project-3" class="headerlink" title="Project 3"></a>Project 3</h2><h3 id="LIOJ-problem-1010"><a href="#LIOJ-problem-1010" class="headerlink" title="LIOJ problem 1010"></a>LIOJ problem 1010</h3><p>Simply check if two numbers are the same.<br>In a safe number range.</p><h3 id="LIOJ-problem-1015"><a href="#LIOJ-problem-1015" class="headerlink" title="LIOJ problem 1015"></a>LIOJ problem 1015</h3><p>Calculate the distance<br>Number range is also safe.</p><p>###LIOJ problem 1017<br>Maximum thief capacity 1000<br>Maximum value 100000<br>Maximum total value 10 ^ 8<br>declare 1000 variables?<br><code>.sort()</code> and <code>splice()</code><br>items in store might be less then what a thief can take</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Reading comprehension? Yes! and No! Also pay attention to input range.&lt;/p&gt;
&lt;h2 id=&quot;Translate-the-problem-into-simple-language&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 1&amp;2 - Think First</title>
    <link href="https://jas0nhuang.github.io/2020/04/10/alg101-dont-leetcode-yet-1/"/>
    <id>https://jas0nhuang.github.io/2020/04/10/alg101-dont-leetcode-yet-1/</id>
    <published>2020-04-10T10:20:48.000Z</published>
    <updated>2023-05-12T15:00:02.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Think-Before-You-Code"><a href="#Think-Before-You-Code" class="headerlink" title="Think Before You Code"></a>Think Before You Code</h2><p>Think about the processes thoroughly, organize and write down Flowchart (execution steps) and&#x2F;or Pseudocode before actually coding.</p><p>One process each line. Expression, Condition, Repetition.</p><h2 id="Some-Examples"><a href="#Some-Examples" class="headerlink" title="Some Examples"></a>Some Examples</h2><h3 id="Print-out-even-integers-from-1-to-100"><a href="#Print-out-even-integers-from-1-to-100" class="headerlink" title="Print out even integers from 1 to 100"></a>Print out even integers from 1 to 100</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Let theNumber equals to 1</span><br><span class="line">    1. If theNumber larger then 100</span><br><span class="line">        -&gt; Stop the program</span><br><span class="line">    2. If theNumber smaller then 100 </span><br><span class="line">        -&gt; If theNumber is even</span><br><span class="line">            -&gt; Print out theNumber</span><br><span class="line">        -&gt; If theNumber is odd</span><br><span class="line">            -&gt; Do nothing</span><br><span class="line">        -&gt; Add 1 to theNumber </span><br><span class="line">        -&gt; Go back to 1. </span><br></pre></td></tr></table></figure><p>pseudocode:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 let theNumber = 1</span><br><span class="line">2    if theNumber &gt; 100</span><br><span class="line">3        exit</span><br><span class="line">4    else</span><br><span class="line">5        if theNumber % 2 === 0</span><br><span class="line">6            print theNumber</span><br><span class="line">7    theNumber = theNumber + 1</span><br><span class="line">8    back to line 2</span><br></pre></td></tr></table></figure><p>also:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for theNumber from 1 to 100</span><br><span class="line">    if theNumber % 2 === 0</span><br><span class="line">        print theNumber</span><br></pre></td></tr></table></figure><p>Indent each section in the code makes the code more readable. Like the for, if and print section above.</p><h3 id="Fizz-Buzz"><a href="#Fizz-Buzz" class="headerlink" title="Fizz Buzz"></a>Fizz Buzz</h3><p>Print <code>fizz</code> if the number is multiple of 3, print <code>buzz</code> if the number is multiple of 5, and print <code>fizzbuzz</code> if the number is multiple of 3 and 5.<br>Some brute force solutions and some BETTER solutions (String Concatenation, Hash).</p><h3 id="Find-the-smallest-card"><a href="#Find-the-smallest-card" class="headerlink" title="Find the smallest card"></a>Find the smallest card</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let smallCard = firstCard</span><br><span class="line">for i from 1 to N</span><br><span class="line">    if card i &lt; smallCard</span><br><span class="line">        smallCard = card i</span><br></pre></td></tr></table></figure><h2 id="Project-1"><a href="#Project-1" class="headerlink" title="Project 1"></a>Project 1</h2><ol><li><p>Reverse String</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let outputStr = &quot;&quot;</span><br><span class="line">for i from stringLength to 0</span><br><span class="line">    outputStr += originalStr[i]</span><br><span class="line">print outputStr</span><br></pre></td></tr></table></figure></li><li><p>Array sum</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let result = 0</span><br><span class="line">for i from 1 to array length</span><br><span class="line">    result += array[i]</span><br><span class="line">print the result</span><br></pre></td></tr></table></figure></li><li><p>Find the biggest</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let the bigCard = the firstCard</span><br><span class="line">for i from 1 to total cards number</span><br><span class="line">    if card i &gt; bigCard</span><br><span class="line">        bigCard = card i</span><br></pre></td></tr></table></figure></li></ol><h2 id="Computational-Thinking"><a href="#Computational-Thinking" class="headerlink" title="Computational Thinking"></a>Computational Thinking</h2><p>Think one step at a time. Read a piece of code and try to execute the code line by line in your head.</p><h2 id="Useful-tips-for-reading-the-code"><a href="#Useful-tips-for-reading-the-code" class="headerlink" title="Useful tips for reading the code"></a>Useful tips for reading the code</h2><h3 id="Use-Chrome-Devtool-Debugger"><a href="#Use-Chrome-Devtool-Debugger" class="headerlink" title="Use Chrome Devtool Debugger"></a>Use Chrome Devtool Debugger</h3><p>Just add the word <code>debugger</code> in the beginning of the JavaScript code.<br>For Firefox Devtool. Need to set a break point by clicking on the line number at the left of the code.<br>These Devtools can run the code step by step</p><h3 id="Console-log-everything"><a href="#Console-log-everything" class="headerlink" title="Console.log everything"></a><code>Console.log</code> everything</h3><p>When console.log out an array, we can STRINGIFY (<code>JSON.stringify()</code>) it to show the actual content at that moment (but not the one that has been modified latter).</p><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ol><li><p>Find second large</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let max = -Infinity </span><br><span class="line">    //but not array[0].</span><br><span class="line">    // Or else there will be some problem finding solution.</span><br><span class="line">let max2 = -Infinity</span><br></pre></td></tr></table></figure></li><li><p>Lower case string to Upper case<br>Some knowledge about ASCII code<br>ASCII code:<br> a: 97 z:122 A:65 Z:90 (add 32 to exchange Upper case to lower case.)<br>Function in JavaScript<br> <code>&quot;a&quot;.charCodeAt(0)</code> will give the ASCII code for “a”<br> <code>String.fromCharCode(&quot;a&quot;.charCodeAt(0) - 32)</code> this will get the character “A”<br> <code>s.toUpperCase()</code> shortcut!</p></li><li><p>Delete a certain character</p></li></ol><h2 id="Project-2"><a href="#Project-2" class="headerlink" title="Project 2"></a>Project 2</h2><p>Observe the structure of the code.<br>Write down the execution step by step by reading the code.</p><ol><li>Find Second max</li><li>Lower Upper case exchange</li><li>Find the divisor of a number<br>Em…here are the solutions:<a href="https://github.com/Lidemy/ALG101-too-weak-to-leetcode/tree/master/unit2">ALG101-too-weak-to-leetcode&#x2F;unit2</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Think-Before-You-Code&quot;&gt;&lt;a href=&quot;#Think-Before-You-Code&quot; class=&quot;headerlink&quot; title=&quot;Think Before You Code&quot;&gt;&lt;/a&gt;Think Before You Code&lt;/</summary>
      
    
    
    
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t LeetCode Yet - 0 - Usage of LIOJ</title>
    <link href="https://jas0nhuang.github.io/2020/04/10/alg101-dont-leetcode-yet-0/"/>
    <id>https://jas0nhuang.github.io/2020/04/10/alg101-dont-leetcode-yet-0/</id>
    <published>2020-04-10T04:07:42.000Z</published>
    <updated>2023-05-12T15:00:02.623Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://lidemy.com/courses/793973">Course link</a><br>Things to know before LeetCode!</p><h2 id="LIOJ-Interface"><a href="#LIOJ-Interface" class="headerlink" title="LIOJ Interface"></a>LIOJ Interface</h2><p><a href="https://oj.lidemy.com/">Lidemy OJ</a>: An online judge system based on the open-source <a href="https://github.com/QingdaoU/OnlineJudge">OJ project from Qing-Dao University</a></p><ol><li><p>File I&#x2F;O using nodejs library <code>readline</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var readline = require(&#x27;readline&#x27;);</span><br><span class="line"></span><br><span class="line">var lines = []</span><br><span class="line">var rl = readline.createInterface(&#123;</span><br><span class="line">      input: process.stdin</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// push one line to the array lines</span><br><span class="line">rl.on(&#x27;line&#x27;, function (line) &#123;</span><br><span class="line">      lines.push(line)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// After all the input, call the solve() function</span><br><span class="line">rl.on(&#x27;close&#x27;, function() &#123;</span><br><span class="line">      solve(lines)</span><br><span class="line">&#125;)</span><br><span class="line">//-------------------------above using readline to get input---------</span><br><span class="line">//-------------------------put solution below------------------------</span><br><span class="line">function solve(lines)&#123;</span><br><span class="line">    // solution here</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Test the solution on local machine<br>Need NodeJS installed to run the code above.<br>Recommended practice: write an input file separately (input.txt) and <code>cat</code> out the content then pass (pipe) it to the program (code.js):</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat input.txt | node code.js</span><br></pre></td></tr></table></figure></li><li><p>Test the solution online<br>I found <a href="https://jsbin.com/">jsbin</a> quite useful for testing. It’s really easy to use and we can see the result right away.</p></li></ol><h2 id="Project-0"><a href="#Project-0" class="headerlink" title="Project 0"></a>Project 0</h2><h3 id="Problem-1001"><a href="#Problem-1001" class="headerlink" title="Problem 1001"></a>Problem 1001</h3><p>Just copy past the code!<br>Use <code>.split()</code> to SPLIT a line into an array.</p><h3 id="Problem-1002"><a href="#Problem-1002" class="headerlink" title="Problem 1002"></a>Problem 1002</h3><p>SPOILER ALERT! Not Very Smart Solution below!</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function solve(lines) &#123;</span><br><span class="line">    for (var i=0; i&lt;line s.length;i++)&#123;</span><br><span class="line">        var tmp = lines[i].split(&#x27; &#x27;)</span><br><span class="line"></span><br><span class="line">        if  (Number(tmp[0])==Number(tmp[1]) &amp;&amp; Number(tmp[1]) === 0)&#123;</span><br><span class="line">            return</span><br><span class="line">        &#125; else if (Number(tmp[0])&gt; Number(tmp[1]))&#123; </span><br><span class="line">            console.log(Number(tmp[0]))</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(Number(tmp[1]))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>It could be better to use variable to store <code>Number(tmp[0])</code> and <code>Number(tmp[1])</code>. So the code will looks cleaner.<br>Use <code>===</code> to compare with number <code>0</code>.  </p><h3 id="Practice-with-problem-1003-1004-and-1010"><a href="#Practice-with-problem-1003-1004-and-1010" class="headerlink" title="Practice with problem 1003, 1004 and 1010"></a>Practice with problem 1003, 1004 and 1010</h3><p>Just to get familiar with the OJ system.</p><p>In problem 1004 Use <code>BigInt()</code> to process BIG numbers.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://lidemy.com/courses/793973&quot;&gt;Course link&lt;/a&gt;&lt;br&gt;Things to know before LeetCode!&lt;/p&gt;
&lt;h2 id=&quot;LIOJ-Interface&quot;&gt;&lt;a href=&quot;#LIOJ</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="Algorithm" scheme="https://jas0nhuang.github.io/tags/Algorithm/"/>
    
    <category term="Lidemy" scheme="https://jas0nhuang.github.io/tags/Lidemy/"/>
    
  </entry>
  
  <entry>
    <title>Build a Basic M.E.N. Site - 4 - Make It Looks Better</title>
    <link href="https://jas0nhuang.github.io/2020/04/07/build-a-basic-men-site-4/"/>
    <id>https://jas0nhuang.github.io/2020/04/07/build-a-basic-men-site-4/</id>
    <published>2020-04-07T10:25:27.000Z</published>
    <updated>2023-05-12T15:00:02.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Serve-CSS-With-NodeJS-x2F-Express"><a href="#Serve-CSS-With-NodeJS-x2F-Express" class="headerlink" title="Serve CSS With NodeJS&#x2F;Express"></a>Serve CSS With NodeJS&#x2F;Express</h2><ol><li><p>Create a <code>public/</code> folder inside the project’s main folder, and put a CSS file inside:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ./public</span><br><span class="line">vim ./public/styls.css</span><br></pre></td></tr></table></figure></li><li><p>Add a middleware in the <code>server.js</code> file:<br>EJS can not directly get the CSS file when rendering, so we need to add a middleware in the server file:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.use(express.static(__dirname +＂/public&quot;))</span><br></pre></td></tr></table></figure></li><li><p>Link the CSS file in <code>index.ejs</code> file</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link href=&quot;/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="The-STYLE"><a href="#The-STYLE" class="headerlink" title="The STYLE"></a>The STYLE</h2><p>Some notes about the CSS:</p><ol><li><p>Only one font setting :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">font-family: &quot;Source Han Sans&quot;, &quot;Microsoft JhengHei&quot;, sans-serif;</span><br></pre></td></tr></table></figure></li><li><p>Transparent input segment. Use <code>input::placeholder</code> to style the placeholder text. And <code>input:focus::placeholder</code> to set the style when selected(focus).</p></li><li><p>Button:<br><code>border-radius</code> to set a rounded button. <code>cursor: pointer</code> to change the cursor style.</p></li><li><p>The <code>&lt;div&gt;</code> holding the list.<br><code>vertical-align: top</code> to set it to the top.</p></li></ol><p>Here it is! A very simple MEN stack web site. What I will like to do latter:</p><ol><li>Add a pie chart to show the percentage of each choice using CSS or SVG+JavaScript and Use <code>Math.floor(X *100)/100</code> to find the percentage. <a href="https://www.oxxostudio.tw/articles/201406/svg-12-pie-chart.html">Reference</a></li><li>Use <code> express-rate-limit</code> to block an ip with too much connections. Also improve the site’s security.<a href="https://medium.com/@nodepractices/were-under-attack-23-node-js-security-best-practices-e33c146cb87d">Reference</a></li><li>Add UPDATE functionality to let user update&#x2F;change their choice.<a href="https://zellwk.com/blog/crud-express-and-mongodb-2/">REference</a></li><li>Auto generate a page every day.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Serve-CSS-With-NodeJS-x2F-Express&quot;&gt;&lt;a href=&quot;#Serve-CSS-With-NodeJS-x2F-Express&quot; class=&quot;headerlink&quot; title=&quot;Serve CSS With NodeJS&amp;#x2F</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="CSS" scheme="https://jas0nhuang.github.io/tags/CSS/"/>
    
    <category term="NodeJS" scheme="https://jas0nhuang.github.io/tags/NodeJS/"/>
    
    <category term="Express" scheme="https://jas0nhuang.github.io/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Build a Basic M.E.N. Site - 3 - Database to Front-end</title>
    <link href="https://jas0nhuang.github.io/2020/04/05/build-a-basic-men-site-3/"/>
    <id>https://jas0nhuang.github.io/2020/04/05/build-a-basic-men-site-3/</id>
    <published>2020-04-04T23:53:19.000Z</published>
    <updated>2023-05-12T15:00:02.640Z</updated>
    
    <content type="html"><![CDATA[<p>The server is up and running, the database is set and ready to collect information from the user.<br>Next we want to READ data from our database and show them to the user.</p><h2 id="READ-data-from-MongoDB"><a href="#READ-data-from-MongoDB" class="headerlink" title="READ data from MongoDB"></a>READ data from MongoDB</h2><ol><li><p>We want to GET data from the server&#x2F;database, so the request will be pout under the <code>.get()</code> method.<br>In MongoDB we can use <code>.find()</code> method to find documents inside a colletion.<br>This <code>.find()</code> method will return a cursor (a Mongo object) whitch contains informations of the documents that we want to find.<br>(try to console.log this cursor object?!)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.get(&quot;/&quot;, function(req, res)&#123;</span><br><span class="line">        var cursor = db.collection(&quot;plusorminus&quot;).find();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Use <code>.toArray()</code> method for this cursor object to put the informations inside an array.<br>The <code>.toArray()</code> method takes in a callback function. We can try <code>console.log()</code> the results.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cursor.toArray(function(err, results)&#123;</span><br><span class="line">    console.log(results)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Put in the actions that I want to do.<br>Count the choice of all user and <code>console.log()</code> out the counts.<br>The <code>.get()</code> section of code will now look like this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.get(&quot;/&quot;, function(req, res)&#123;</span><br><span class="line">    res.sendFile(__dirname + &quot;/index.html&quot;)</span><br><span class="line"></span><br><span class="line">    var cursor = db.collection(&quot;plusorminus&quot;).find()</span><br><span class="line">    cursor.toArray(function(err, results)&#123;</span><br><span class="line">        if (err) return console.log(err)</span><br><span class="line">        var plus = 0</span><br><span class="line">        var minus = 0</span><br><span class="line">        for (i = 0; i &lt; results.length; i++)&#123;</span><br><span class="line">            if (results[i].plusorminus == &quot;+&quot;)&#123;</span><br><span class="line">                plus += 1</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                minus += 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&quot;plus: &quot; + plus)</span><br><span class="line">        console.log(&quot;minus: &quot; + minus)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="Show-data-to-users-using-EJS"><a href="#Show-data-to-users-using-EJS" class="headerlink" title="Show data to users using EJS"></a>Show data to users using EJS</h2><p>We now have the data retrived from MongoDB and <code>console.log()</code> in the console. We should use a template engine to serve it to a HTML file.</p><h3 id="Install-EJS-and-Edit-The-Server"><a href="#Install-EJS-and-Edit-The-Server" class="headerlink" title="Install EJS and Edit The Server"></a>Install EJS and Edit The Server</h3><ol><li><p>Install EJS</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install ejs --save</span><br></pre></td></tr></table></figure><p>set the <code>view engine</code> to <code>ejs</code> in NodeJS&#x2F;Express server by adding a line inside the <code>server.js</code> file.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.set(&quot;view engine&quot;, &quot;ejs&quot;)</span><br></pre></td></tr></table></figure></li><li><p>Render the page with template.<br>The rendering is done by the <code>.render()</code> method under <code>response</code>, the syntax is:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res.render(VIEW, DATA)</span><br></pre></td></tr></table></figure><p>The VIEW is the file that we want to render (like XXX.ejs) and the DATA will be an object that passes data into the VIEW.<br>I want to latter render an <code>index.ejs</code> file and send the results to the web page. So I will add this line inside the <code>app.get()</code> section, and comment out the original <code>res.sendFile()</code> method:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res.render(&quot;index.ejs&quot;, &#123;</span><br><span class="line">    results: results</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="Edit-EJS-File"><a href="#Edit-EJS-File" class="headerlink" title="Edit EJS File"></a>Edit EJS File</h3><ol><li><p>Create the <code>views/</code> folder and the EJS file.<br>EJS will search automatically inside the <code>views/</code> folder for files that we want to render. So we can create a <code>views/</code> folder and an <code>index.ejs</code> file inside.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir views</span><br><span class="line">touch views/index.ejs</span><br></pre></td></tr></table></figure></li><li><p>Inside the EJS file<br>An EJS file is actually an HTML file in whitch we can write JavaScript code. So we can copy the content inside the <code>index.html</code> file and add the EJS part inside. The whole <code>index.ejs</code> file will look like this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;MY APP&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src=&quot;/ covid19.svg&quot;&gt;</span><br><span class="line">    &lt;form action=&quot;/plusorminus&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">        &lt;input name=&quot;FacebookName&quot; type=&quot;text&quot; placeholder=&quot;Your Name&quot;&gt;</span><br><span class="line">        &lt;span&gt; prophesy:&lt;/span&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;label value=&quot;21032020&quot;&gt;New cases on 06/04/2020 will be&lt;/label&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input name=&quot;date&quot; type=&quot;hidden&quot; value=&quot;21032020&quot;&gt;</span><br><span class="line">        &lt;button class=&quot;plusbutton&quot; type=&quot;submit&quot; name=&quot;plusorminus&quot; value=&quot;+&quot;&gt;More&lt;/button&gt;</span><br><span class="line">        &lt;span&gt;/&lt;/span&gt;</span><br><span class="line">        &lt;button class=&quot;minusbutton&quot; type=&quot;submit&quot; name=&quot;plusorminus&quot; value=&quot;-&quot;&gt;Less&lt;/button&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;span&gt;then the new cases on 05/04/2020&lt;/span&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;h2&gt;True Prophet?</span><br><span class="line">    &lt;br&gt;False Prophet?&lt;/h2&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;plus&quot;&gt;</span><br><span class="line">        &lt;h3&gt; More&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt; </span><br><span class="line">            &lt;!-- EJS part --&gt;</span><br><span class="line">            &lt;% for(var i = 0; i &lt; results.length; i++)&#123; %&gt;</span><br><span class="line">                &lt;% if (results[i].plusorminus == &quot;+&quot;) &#123; %&gt;</span><br><span class="line">                    &lt;li class=&quot;user&quot;&gt;&lt;%= results[i].FacebookName %&gt;&lt;/span&gt;</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line">            &lt;!-- end of EJS part --&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;minus&quot;&gt;</span><br><span class="line">        &lt;h3&gt; Less&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">             &lt;!-- EJS part --&gt;</span><br><span class="line">             &lt;% for(var i = 0; i &lt; results.length; i++)&#123; %&gt;</span><br><span class="line">                 &lt;% if (results[i].plusorminus == &quot;-&quot;) &#123; %&gt;</span><br><span class="line">                    &lt;li class=&quot;user&quot;&gt;&lt;%= results[i].FacebookName %&gt;&lt;/span&gt;</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line">            &lt;!-- end of EJS part --&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ol><p>EJS’ syntax is quite simple. Use <code>&lt;% %&gt;</code> to write JavaScript inside. And <code>&lt;%= %&gt;</code> can output JavaScript’s result as string.<br>BTW, one little thing to be careful. The <code>&#125; else &#123;</code> statment should be put in the same <code>&lt;% %&gt;</code> tag. There will be an error if you separate <code>&#125;</code> and <code>else &#123;</code> to two lines. Examples:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// correct</span><br><span class="line">&lt;% &#125; else &#123; %&gt;</span><br><span class="line"></span><br><span class="line">// error</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% else &#123; %&gt;</span><br></pre></td></tr></table></figure><p>Now we have a working server connect to a database. We are able to POST data to the server&#x2F;databse and GET data from the server&#x2F;database (both in a very basic stage ofcourse). But this page looks MXXXX FXXXXX ugly. <a href="/build-a-basic-men-site-4">Some styling will then be needed</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;The server is up and running, the database is set and ready to collect information from the user.&lt;br&gt;Next we want to READ data from our d</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="MongoDB" scheme="https://jas0nhuang.github.io/tags/MongoDB/"/>
    
    <category term="NodeJS" scheme="https://jas0nhuang.github.io/tags/NodeJS/"/>
    
    <category term="Express" scheme="https://jas0nhuang.github.io/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Build a Basic M.E.N. Site - 2 - MongoDB Connection</title>
    <link href="https://jas0nhuang.github.io/2020/04/01/build-a-basic-men-site-2/"/>
    <id>https://jas0nhuang.github.io/2020/04/01/build-a-basic-men-site-2/</id>
    <published>2020-03-31T23:56:24.000Z</published>
    <updated>2023-05-12T15:00:02.639Z</updated>
    
    <content type="html"><![CDATA[<p>I set up the basic server in <a href="/2020/03/30/build-a-basic-men-site-1/">the previous article</a>, now we need to connect it to a database to store datas for the site.</p><h2 id="Connect-to-MongoDB"><a href="#Connect-to-MongoDB" class="headerlink" title="Connect to MongoDB"></a>Connect to MongoDB</h2><h3 id="Use-your-Mongo-to-memorize"><a href="#Use-your-Mongo-to-memorize" class="headerlink" title="Use your Mongo to memorize"></a>Use your Mongo to memorize</h3><ol><li><p>Install that Mongo</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install mongodb --save</span><br></pre></td></tr></table></figure></li><li><p>Connect to MongoDB through MongoClient</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const MongoClient = require(&quot;mongodb&quot;).MongoClient</span><br><span class="line"></span><br><span class="line">MongoClient.connect(&quot;LINK-TO-MONGODB&quot;, function(err, database) &#123;</span><br><span class="line">        /// ... start the server</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Need a DB to connect to.<br>I will just follow the tutorial to create a DB on mLab. It is now aquiered by mongoDB Inc. and called MongoDB Atlas.<br>Create a user and it’s password, find the url to connect to the DB.<br>(I still have questions about the security since the user and password are all writen inside the server.js file. Seems like the security is done by granting different rights to different users, but not really clear for me now.)</p></li><li><p>Start server only when database is connected:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var db</span><br><span class="line"> </span><br><span class="line">MongoClient.connect(&quot;LINK-TO-MONGODB&quot;, function(err, client)&#123;</span><br><span class="line">         if (err) return console.log(err </span><br><span class="line">                 db = client.db(&quot;DBNAME&quot;)</span><br><span class="line">                     app.listen(3000, function()&#123;</span><br><span class="line">                                 console.log(&quot;listening on 3000&quot;)</span><br><span class="line">                                     &#125;) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="Create-collection-to-store-stuff"><a href="#Create-collection-to-store-stuff" class="headerlink" title="Create collection to store stuff"></a>Create collection to store stuff</h3><ol><li>Under the app.post method, specify a collection by calling db.collection() method. If the collection doesn’t exist then <code>db.collection()</code> function will create it.<br>After creating&#x2F;chosing the collection, we use <code>db.collection().insertOne()</code> function to CREATE(insert) data.<br>VERY IMPORTANT! We have throw a signal to tell the application to redirect to the root directory by useing <code>res.redirect()</code> so that the server knows that this action is finished:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.post(&quot;/plusorminus&quot;, function(req, res) &#123;</span><br><span class="line">    db.collection(&quot;plusorminus&quot;).insertOne(req.body,function(err, result)&#123; </span><br><span class="line">        if (err) return console.log(err) </span><br><span class="line">        res.redirect(&quot;/&quot;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="Add-some-logic-to-handle-different-user-inputs"><a href="#Add-some-logic-to-handle-different-user-inputs" class="headerlink" title="Add some logic to handle different user inputs"></a>Add some logic to handle different user inputs</h3><ol><li><p>Avoid duplication<br>Since I only want one vote for one user, I use <code>.findOne()</code> to look for an user name, and put the <code>.insertOne()</code> under an if&#x2F;else statement.<br>And the whole POST block will look like this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(user)&#123;</span><br><span class="line">    console.log(req.body.FacebookName + &quot; already exist.&quot;) </span><br><span class="line">    res.redirect(&quot;/&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Check for empty entry:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(req.body.FacebookName == &quot;&quot;)&#123;</span><br><span class="line">    console.log(&quot;Please enter your name.&quot;)</span><br><span class="line">    res.redirect(&quot;/&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Trim the TOO LONG NAME</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (req.body.FacebookName.length &gt; 20)&#123;</span><br><span class="line">    req.body.FacebookName = req.body.FacebookName.substring(0,20)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>And the final <code>.post</code> section will look like this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.post(&quot;/plusorminus&quot;,function(req, res)&#123;</span><br><span class="line">    db.collection(&quot;plusorminus&quot;).findOne(&#123;FacebookName:req.body.FacebookName&#125;, function(err, user)&#123;</span><br><span class="line">        console.log(req.body.FacebookName) </span><br><span class="line">        if(req.body.FacebookName == &quot;&quot;)&#123;</span><br><span class="line">            console.log(&quot;Please enter your name.&quot;)</span><br><span class="line">            res.redirect(&quot;/&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        else if(user)&#123;</span><br><span class="line">            console.log(req.body.FacebookName + &quot; already exist!&quot;) </span><br><span class="line">            res.redirect(&quot;/&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            if (req.body.FacebookName.length &gt; 20)&#123;</span><br><span class="line">                req.body.FacebookName = req.body.FacebookName.substring(0,20)</span><br><span class="line">            &#125;</span><br><span class="line">            db.collection(&quot;plusorminus&quot;).insertOne(req.body, function(err, result)&#123;</span><br><span class="line">                if (err) return console.log(err)</span><br><span class="line">                res.redirect(&quot;/&quot;)</span><br><span class="line">                console.log(&quot;Thank you for your vote!&quot;) </span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Here is a web site with a simple CREATE(input) functionality. Next we will look at <a href="/2020/04/05/build-a-basic-men-site-3/">how to READ data from the database and show them to the users</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I set up the basic server in &lt;a href=&quot;/2020/03/30/build-a-basic-men-site-1/&quot;&gt;the previous article&lt;/a&gt;, now we need to connect it to a dat</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="MongoDB" scheme="https://jas0nhuang.github.io/tags/MongoDB/"/>
    
    <category term="NodeJS" scheme="https://jas0nhuang.github.io/tags/NodeJS/"/>
    
    <category term="Express" scheme="https://jas0nhuang.github.io/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Build a Basic M.E.N. Site - 1 - NodeJS/Express Server</title>
    <link href="https://jas0nhuang.github.io/2020/03/30/build-a-basic-men-site-1/"/>
    <id>https://jas0nhuang.github.io/2020/03/30/build-a-basic-men-site-1/</id>
    <published>2020-03-30T00:15:25.000Z</published>
    <updated>2023-05-12T15:00:02.637Z</updated>
    
    <content type="html"><![CDATA[<p>This is my note trying to build a basic M.E.N.(MongoDB, Express, NodeJS) stack web site.<br>Most of the steps are following the posts of ZELL LIEW : <a href="https://zellwk.com/blog/crud-express-mongodb/">Building a Simple CRUD Application with Express and MongoDB</a>.</p><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><ol><li>Create project folder</li><li>Run <code>npm init</code> inside the folder. Press enter for everything.</li><li>Create server.js file <code>touch server.js</code>. Write some LOGLOG inside and run it with <code>node server.js</code>.</li></ol><h2 id="Basic-Backend-Structure-with-NodeJS-and-Express"><a href="#Basic-Backend-Structure-with-NodeJS-and-Express" class="headerlink" title="Basic Backend Structure with NodeJS and Express"></a>Basic Backend Structure with NodeJS and Express</h2><h3 id="Start-using-Express"><a href="#Start-using-Express" class="headerlink" title="Start using Express"></a>Start using Express</h3><ol><li><code>npm install express --save</code>. The –save option will install third-party package to the package dependencies.</li><li>Check package.json file if the dependency is added.</li><li>use express in server.js app.<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// first require it.</span><br><span class="line">const express = require(&#x27;express&#x27;);</span><br><span class="line">const app = express();</span><br><span class="line"></span><br><span class="line">// Second. Create a server with .listen method provided by Express.</span><br><span class="line">app.listen(3000, function()&#123;</span><br><span class="line">    console.log(&quot;We are listening on port 3000&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="GET-to-Read-something"><a href="#GET-to-Read-something" class="headerlink" title="GET to Read something"></a>GET to Read something</h3><ol><li><p>Can run server.js with node. But still no page servered. So there will be a “Cannot GET &#x2F;“ message if we connect to localhost:3000.</p></li><li><p>Read operation: Use the .get method to handle a GET request:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.get(path, callback)</span><br></pre></td></tr></table></figure><p>path will be “&#x2F;“ here.<br>callback stars a “callback function” if the path is matched. and this “function” takes a request object and a response object.</p></li><li><p>Say “HELLO” with the .send method in response object.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.get(&quot;/&quot;, function(req, res)&#123;</span><br><span class="line">    res.send(&quot;Now you see me.&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>This should SEND the message “Now you see me.” to the browser.</p></li><li><p>Serve an index.html to the browser:<br>use the .sendFile method insted:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res.sendFile(__dirname + &quot;/index.html&quot;)</span><br><span class="line">// __dirname is dir that contains the JS source code. LOG it to see the path?!</span><br></pre></td></tr></table></figure><p>TOUCH an index.html file to be servered</p></li></ol><h3 id="Nodemon"><a href="#Nodemon" class="headerlink" title="Nodemon"></a>Nodemon</h3><p>With the nodemon package we can let the server restarts automatically.</p><ol><li>Install nodemon<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install nodemon --save-dev</span><br><span class="line">// --save-dev because this package is only used developing. So it will be write to devDependency in package.json.</span><br></pre></td></tr></table></figure></li><li>Use nodemon<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nodemon server.js</span><br></pre></td></tr></table></figure>won’t work since nodemon is not installed with -g.<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/nodemon server.js</span><br></pre></td></tr></table></figure>or create a script key in package.json:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;scripts&quot;:&#123;</span><br><span class="line">        &quot;dev&quot;:&quot;nodemon server.js&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>and we can run <code>npm run dev</code> to trigger <code>nodemon server.js</code></li></ol><h2 id="Basic-DOM-Manipulation"><a href="#Basic-DOM-Manipulation" class="headerlink" title="Basic DOM Manipulation"></a>Basic DOM Manipulation</h2><h3 id="POST-some-Creativety"><a href="#POST-some-Creativety" class="headerlink" title="POST some Creativety"></a>POST some Creativety</h3><ol><li><p>Create operation: Use .post method to Create things back to server.<br>It can be done by JavaScript or html <form> element.</p></li><li><p>Try with the <code>&lt;form&gt;</code> now:<br>Need to have action and method attributes in the <code>&lt;form&gt;</code> tag and name attributes on all <code>&lt;input&gt;</code> tags:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;form action=&quot;/plusorminus&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">    &lt;input name=&quot;FacebookName&quot; type=&quot;text&quot; placeholder=&quot;Your Name&quot;&gt;</span><br><span class="line">    &lt;span&gt; prophesy:&lt;/span&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;label value=&quot;21032020&quot;&gt;New cases on 06/04/2020 will be&lt;/label&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input name=&quot;date&quot; type=&quot;hidden&quot; value=&quot;21032020&quot;&gt;</span><br><span class="line">    &lt;button class=&quot;plusbutton&quot; type=&quot;submit&quot; name=&quot;plusorminus&quot; value=&quot;+&quot;&gt;More&lt;/button&gt;</span><br><span class="line">    &lt;span&gt;/&lt;/span&gt;</span><br><span class="line">    &lt;button class=&quot;minusbutton&quot; type=&quot;submit&quot; name=&quot;plusorminus&quot; value=&quot;-&quot;&gt;Less&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;span&gt;then the new cases on 05/04/2020&lt;/span&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>“action” attribute finds the path. “method” defines the request to send.</p></li><li><p>Serverside handle the POST request with “.post” method with Express. Same arguments as the “.get” method.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.post(&quot;/quotes&quot;,function(req, res)&#123;</span><br><span class="line">    console.log(&quot;Now you see me again!&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="Parse-the-body"><a href="#Parse-the-body" class="headerlink" title="Parse the body"></a>Parse the body</h3><ol><li>Express can’t handle reading data from the <form>. So we need “body-parser” package as a middleware to do this.<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install body-parser --save</span><br></pre></td></tr></table></figure></li><li>Add the functionality in the server.js. (Make sure to place body-parser before the CRUD handlers!)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const bodyParser = require(&quot;body-parser&quot;)</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;extended: ture&#125;))</span><br></pre></td></tr></table></figure>(I don’t understand what .urlencoded() function does, but it works anyways.)</li></ol><p>Now that we have a basic NodeJS&#x2F;Express server with a minimal HTML page. Need to proceed to <a href="/2020/04/01/build-a-basic-men-site-2/">the CRUD(Create, Read, Update, Delete) part of this site</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This is my note trying to build a basic M.E.N.(MongoDB, Express, NodeJS) stack web site.&lt;br&gt;Most of the steps are following the posts of </summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://jas0nhuang.github.io/tags/JavaScript/"/>
    
    <category term="MongoDB" scheme="https://jas0nhuang.github.io/tags/MongoDB/"/>
    
    <category term="NodeJS" scheme="https://jas0nhuang.github.io/tags/NodeJS/"/>
    
    <category term="Express" scheme="https://jas0nhuang.github.io/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>MySQL on Linux (1)</title>
    <link href="https://jas0nhuang.github.io/2019/11/17/MySQL-on-Linux-1/"/>
    <id>https://jas0nhuang.github.io/2019/11/17/MySQL-on-Linux-1/</id>
    <published>2019-11-17T02:07:02.000Z</published>
    <updated>2023-05-12T15:00:02.621Z</updated>
    
    <content type="html"><![CDATA[<p>(COURSERA: Using Databases with Python)</p><h2 id="0-INTRO"><a href="#0-INTRO" class="headerlink" title="0. INTRO"></a>0. INTRO</h2><p>C(I) R(S) U D<br>SCHEMA(META-DATA)</p><h2 id="1-Instalation"><a href="#1-Instalation" class="headerlink" title="1. Instalation"></a>1. Instalation</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf update</span><br><span class="line">dnf install @mysql</span><br></pre></td></tr></table></figure><h2 id="2-Start-MySQL-service"><a href="#2-Start-MySQL-service" class="headerlink" title="2. Start MySQL service"></a>2. Start MySQL service</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mysqld</span><br><span class="line">sudo systemctl status mysqld</span><br></pre></td></tr></table></figure><p>secure the database</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>follow the setup process.</p><h2 id="3-Using-MySQL"><a href="#3-Using-MySQL" class="headerlink" title="3. Using MySQL"></a>3. Using MySQL</h2><p>Start up MySQL interface:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u USERNAME -p</span><br></pre></td></tr></table></figure><h3 id="Some-Basic-Operations-and-Single-Table-CRUD"><a href="#Some-Basic-Operations-and-Single-Table-CRUD" class="headerlink" title="Some Basic Operations and Single Table CRUD:"></a>Some Basic Operations and Single Table CRUD:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW DATABASES;</span><br><span class="line">mysql&gt; CREATE DATABASE XXX;</span><br><span class="line">mysql&gt; USE XXX</span><br><span class="line">mysql&gt; CREATE TABLE YYY</span><br></pre></td></tr></table></figure><p>Create table with colums and data info.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE YYY(</span><br><span class="line">name VARCHAR(128),</span><br><span class="line"> email VARCHAR(128)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Insert data into a table:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO YYY (name, email) VALUES (&#x27;MyNAME&#x27;, &#x27;My@EMAIL.COM&#x27;)</span><br></pre></td></tr></table></figure><p>Delete data from a table:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM YYY WHERE email=&#x27;My@EMAIL.COM&#x27;</span><br></pre></td></tr></table></figure><p>Update data in a table:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE YYY SET name=&#x27;MyNAME&#x27; WHERE email=&#x27;My@EMAIL.COM&#x27;</span><br></pre></td></tr></table></figure><p>Select(Read):</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM YYY</span><br><span class="line">SELECT * FROM YYY WHERE email=&#x27;My@EMAIL.COM&#x27;</span><br><span class="line">SELECT * FROM YYY ORDER BY name</span><br></pre></td></tr></table></figure><p>Delete Table:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE YYY</span><br></pre></td></tr></table></figure><p>Delet database:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP DATABASE XXX</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;(COURSERA: Using Databases with Python)&lt;/p&gt;
&lt;h2 id=&quot;0-INTRO&quot;&gt;&lt;a href=&quot;#0-INTRO&quot; class=&quot;headerlink&quot; title=&quot;0. INTRO&quot;&gt;&lt;/a&gt;0. INTRO&lt;/h2&gt;&lt;p&gt;C</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://jas0nhuang.github.io/tags/Linux/"/>
    
    <category term="MySQL" scheme="https://jas0nhuang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>猴子學Python - Business Computing in Python (week 4)</title>
    <link href="https://jas0nhuang.github.io/2019/06/15/monkey-learning-python-business-computing-in-python-week-4/"/>
    <id>https://jas0nhuang.github.io/2019/06/15/monkey-learning-python-business-computing-in-python-week-4/</id>
    <published>2019-06-14T22:00:00.000Z</published>
    <updated>2023-05-12T15:00:02.663Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Conditionals"><a href="#Conditionals" class="headerlink" title="Conditionals"></a>Conditionals</h3><ol><li><p>Nested if-else</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if XXX:</span><br><span class="line">    if YYY:</span><br><span class="line">        statement A</span><br><span class="line">    else:</span><br><span class="line">        statement B</span><br><span class="line">else:</span><br><span class="line">    statement C</span><br></pre></td></tr></table></figure></li><li><p>Avoid potential inconsistency<br> Don’t repeat, don’t copy paste your code.<br> Eliminate redundancy!</p></li><li><p>Ternary if operator</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">min = a if a &lt;= c else c</span><br></pre></td></tr></table></figure><ul><li>parentheses are helpful. They make the code more readable. <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">min = (a if (a &lt;= c) else c)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>else if &#x3D; elif</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if XXX:</span><br><span class="line">elif YYY:</span><br><span class="line">else:</span><br></pre></td></tr></table></figure></li><li><p>Logical operators</p><ul><li>‘and’, ‘or’, ‘not’</li><li>operators have precedence rule, but don’t memorize it. Just use PARENTHESES!</li><li>conditions must be complete at both sides.</li><li>‘not’ is a unary operator.</li></ul></li></ol><h3 id="Iterations-loop"><a href="#Iterations-loop" class="headerlink" title="Iterations(loop)"></a>Iterations(loop)</h3><ol><li><p>‘while’</p><ul><li>an  ‘if’ that repeats</li><li>use ‘loop counters’ to keep track of&#x2F;update the loop. Self assignment are useful (+&#x3D;)</li><li>logical error may create infinite loops</li></ul></li><li><p>‘break’ and ‘continue’</p><ul><li>‘break’ will exit the loop immediately.</li><li>‘continue’ will skip the statements in the loop and recheck the looping condition.</li><li>‘break’ gives a loop multiple exits, it sometimes makes the code harder to read.</li></ul></li><li><p>‘for’</p><ul><li>for variable in list<br>  variable: the loop counter<br>  list: variables that will be traersed.</li><li>how to create list?</li><li>range() function</li></ul></li><li><p>biggest difference between ‘while’ and ‘for’<br> the statement after ‘while’ is a condition but the statement after ‘for’ is just a counter assignment</p></li><li><p>Nested loops</p><ul><li>helpful for multi-dimentional cases.</li><li>print(xxxxxxx , end &#x3D; “ “) the end is used to add anything you want at the end of the printed Chars without adding a new line.</li></ul></li></ol><h3 id="Precision"><a href="#Precision" class="headerlink" title="Precision"></a>Precision</h3><pre><code>1. useing &#39;math&#39; module2. most decimal fractional numbers can only be approximated!!3. use imprecise comparisons but can&#39;t 100% solve the problem.</code></pre><h3 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h3><pre><code>Newsvendor problem<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c = int(input(&quot;perchase cost&quot;))</span><br><span class="line">r = int(input(&quot;price&quot;))</span><br><span class="line">N = int(input(&quot;needs&quot;)) + 1</span><br><span class="line">q = int(input(&quot;perchase ammount&quot;))</span><br><span class="line"></span><br><span class="line">totalprof = 0</span><br><span class="line">totalpercentage = 0</span><br><span class="line">if q == 0:</span><br><span class="line">    print(&quot;nothing!&quot;)</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    for j in range(0, q + 1):</span><br><span class="line">        if j &lt; q:</span><br><span class="line">            pi = input(&quot;probability&quot;) </span><br><span class="line">            totalpercentage += pi</span><br><span class="line">        else:</span><br><span class="line">            pi = 100 - totalpercentage</span><br><span class="line">        print(totalpercentage)</span><br><span class="line">        print(pi)</span><br><span class="line">        profit = (r * j - q * c) * pi</span><br><span class="line">        totalprof += profit</span><br><span class="line">        print(profit)</span><br><span class="line">        print(totalprof)</span><br><span class="line">        </span><br><span class="line">print(totalprof)</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Conditionals&quot;&gt;&lt;a href=&quot;#Conditionals&quot; class=&quot;headerlink&quot; title=&quot;Conditionals&quot;&gt;&lt;/a&gt;Conditionals&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Nested if-else&lt;/p&gt;
 &lt;</summary>
      
    
    
    
    
    <category term="Python" scheme="https://jas0nhuang.github.io/tags/Python/"/>
    
    <category term="Programming" scheme="https://jas0nhuang.github.io/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>猴子學Python - Business Computing in Python (week 3)</title>
    <link href="https://jas0nhuang.github.io/2019/06/07/monkey-learning-python-business-computing-in-python-week-3/"/>
    <id>https://jas0nhuang.github.io/2019/06/07/monkey-learning-python-business-computing-in-python-week-3/</id>
    <published>2019-06-06T22:00:00.000Z</published>
    <updated>2023-05-12T15:00:02.662Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>integer vs floating-point</p><ul><li>type auto- assigned in python</li><li>concept of floating-point numbers<br>  The “binary point” my “float” to make the mapping flexible.</li><li>int(), float()</li><li>type is important for the computer to understand the binary value. Same binary can be different meanings in different types.</li></ul></li><li><p>string</p><ul><li>ASCII code, only one byte(-128 to 127)</li><li>chr() check the ASCII code of the given number.</li><li>len() to check the string’s length.</li><li>(+)</li><li>Other encod ing standards for CH or JP …etc.</li></ul></li><li><p>casting</p><ul><li>type conversion</li><li>print() uses “,” to seperate elements(tokens). It will auto-add a space in between.<br>  To remove the white space we can just concatnate two strings useing “+”.</li></ul></li><li><p>assignment</p><ul><li>use “&#x3D;”</li><li>self assignment: a +&#x3D; 2, a -&#x3D; 2, a&#x2F;&#x3D; 2</li><li>cascade assignment: a&#x3D;b&#x3D;c&#x3D;d&#x3D;…..&#x3D;x</li></ul></li><li><p>conditionals</p><ul><li>if, else, elif  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if condition:</span><br><span class="line">statements</span><br></pre></td></tr></table></figure></li><li>“:” and “indentation” are obligatory</li></ul></li><li><p>boolean</p><ul><li>True or False</li><li>often used with comparison operator</li></ul></li><li><p>formatting</p><ul><li>general guidelines:<ul><li>Add proper spaces: wite spaces around operator, white space after each comma, empty lines to separate groups of codes.</li><li>Variable declaration: understandable names.</li><li>Write comments. (Use # and “”” )</li></ul></li></ul></li></ol><p>Exercise:<br>    money transfer confirmation<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">account1 = int(input(&quot;Account 1 balance:&quot;))</span><br><span class="line">account2 = int(input(&quot;Account 2 balance:&quot;))</span><br><span class="line">transfer = int(input(&quot;Transfer:&quot;))</span><br><span class="line"></span><br><span class="line">if transfer &lt;= account1:</span><br><span class="line">    account1 -= transfer</span><br><span class="line">    account2 += transfer</span><br><span class="line">else:</span><br><span class="line">    transfer = account1</span><br><span class="line">    account1 -= transfer</span><br><span class="line">    account2 += transfer</span><br><span class="line"></span><br><span class="line">print(account1, account2)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;integer vs floating-point&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type auto- assigned in python&lt;/li&gt;
&lt;li&gt;concept of floating-point numbers&lt;br&gt;  The “binary</summary>
      
    
    
    
    
    <category term="Python" scheme="https://jas0nhuang.github.io/tags/Python/"/>
    
    <category term="Programming" scheme="https://jas0nhuang.github.io/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>猴子學Python - Business Computing in Python (week 2)</title>
    <link href="https://jas0nhuang.github.io/2019/06/01/monkey-learning-python-business-computing-in-python-week-2/"/>
    <id>https://jas0nhuang.github.io/2019/06/01/monkey-learning-python-business-computing-in-python-week-2/</id>
    <published>2019-05-31T22:00:00.000Z</published>
    <updated>2023-05-12T15:00:02.660Z</updated>
    
    <content type="html"><![CDATA[<p>This series are notes taken for the coursera course: <a href="https://www.coursera.org/learn/pbc1/">Programming for Business Computing in Python(1)(用Python做商管程式設計)</a></p><p>Week 1 is just an introduction about how computing can work for business management.</p><ol><li><p>print and arithmetic</p><ul><li><p>some terms<br>  statement, one statement must be put in a single line in python!<br>  operation<br>  function<br>  operand(argument)</p></li><li><p>“” or ‘’</p></li><li><p>change line with “newline character”: \n</p></li><li><p>And some other special characters: \t, \, &#39;, &quot;</p></li><li><p>string operation</p></li><li><p>arithmetic: +, -, *, **(square), &#x2F;(floating-point division), &#x2F;&#x2F;(floor division), %(remainder)</p></li></ul></li><li><p>input and variables</p><ul><li><p>variables: </p><ul><li>takes a memory space</li><li>data type: int(integer), float(fractional numbers), string(string)</li><li>type, name, value</li><li>declare the value</li><li>use type() to see the type</li></ul></li><li><p>string, integer and floating point</p><ul><li>adding</li><li>type conversion int(), str()</li></ul></li></ul></li></ol><p>EX1:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">w = int(input())</span><br><span class="line">x = int(input())</span><br><span class="line">y = int(input())</span><br><span class="line">z = int(input())</span><br><span class="line">print(w*50 + x*10 + y*5 + z*1)</span><br></pre></td></tr></table></figure></p><p>EX2:(My solution looks stupid…… )<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = int(input(&quot;Total:&quot;))</span><br><span class="line">change = 1000-a</span><br><span class="line"></span><br><span class="line">FHbill = change//500</span><br><span class="line"></span><br><span class="line">leftFH = change-FHbill*500</span><br><span class="line">OHbill = leftFH//100</span><br><span class="line"></span><br><span class="line">leftOH = leftFH-OHbill*100</span><br><span class="line">FTbill = leftOH//50</span><br><span class="line"></span><br><span class="line">leftFT = leftOH-FTbill*50</span><br><span class="line">TENcoin = leftFT//10</span><br><span class="line"></span><br><span class="line">leftTEN = leftFT-TENcoin*10</span><br><span class="line">FIVEcoin = leftTEN//5</span><br><span class="line"></span><br><span class="line">leftFIVE = leftTEN-FIVEcoin*5</span><br><span class="line">ONEcoin = leftFIVE</span><br><span class="line"></span><br><span class="line">print(FHbill, OHbill, FTbill, TENcoin, FIVEcoin, ONEcoin)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This series are notes taken for the coursera course: &lt;a href=&quot;https://www.coursera.org/learn/pbc1/&quot;&gt;Programming for Business Computing in</summary>
      
    
    
    
    
    <category term="Python" scheme="https://jas0nhuang.github.io/tags/Python/"/>
    
    <category term="Programming" scheme="https://jas0nhuang.github.io/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Errors on Linux</title>
    <link href="https://jas0nhuang.github.io/2019/05/29/mysql-errors-on-linux/"/>
    <id>https://jas0nhuang.github.io/2019/05/29/mysql-errors-on-linux/</id>
    <published>2019-05-29T19:13:46.000Z</published>
    <updated>2023-05-12T15:00:02.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Error-when-try-to-start-MySQL-client"><a href="#1-Error-when-try-to-start-MySQL-client" class="headerlink" title="1. Error when try to start MySQL client"></a>1. Error when try to start MySQL client</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u USERNAME -p</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 2002 (HY000): Can&#x27;t connect to local MySQL server through socket &#x27;/var/lib/mysql/mysql.sock&#x27; (2)</span><br></pre></td></tr></table></figure><p>This error might be caused by no running mysql server.<br>Try to restart the mysql server.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 1698 (28000): Access denied for user &#x27;root&#x27;@&#x27;localhost&#x27;</span><br></pre></td></tr></table></figure><p>As it says, no access right. But may have different reasons.</p><h2 id="2-Error-when-try-to-start-the-server"><a href="#2-Error-when-try-to-start-the-server" class="headerlink" title="2. Error when try to start the server"></a>2. Error when try to start the server</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld.server</span><br></pre></td></tr></table></figure><p>got some error:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">job for mysql.service failed because the control process exited with error code</span><br></pre></td></tr></table></figure><p>or maybe:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unit mysqld.service not found</span><br></pre></td></tr></table></figure><p>It sometimes stuck during the startup process.</p><p>For all the errors above, I think they are all caused by some mysql and mariadb conflicts(not sure). I did not find any way to solve them, so I just reinstall the whole linux system. And install only MySQL. Everything work just fine afterwards.</p><p>It might also solve these problems by uninstalling and reinstall MySQL&#x2F;Mariadb. Probably need to clean up all residule files left in the system.</p><h2 id="3-Error-try-to-install-mysqlclient-for-python"><a href="#3-Error-try-to-install-mysqlclient-for-python" class="headerlink" title="3. Error try to install mysqlclient for python"></a>3. Error try to install mysqlclient for python</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install mysqlclient</span><br></pre></td></tr></table></figure><p>And I got this error…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">raise EnvironmentError(&quot;%s not found&quot; % (_mysql_config_path,))</span><br><span class="line">OSError: mysql_config not found</span><br><span class="line">Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-build-f0a69vku/mysqlclient/</span><br></pre></td></tr></table></figure><p>Seems that I need to install a devel environment.</p><p>So:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install mysql-devel</span><br></pre></td></tr></table></figure><p>Retry install with pip3 install mysqlclient.And still error:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unable to execute &#x27;gcc&#x27;: No such file or directory</span><br><span class="line">error: command &#x27;gcc&#x27; failed with exit status 1</span><br></pre></td></tr></table></figure><p>No gcc,  install it:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install gcc</span><br></pre></td></tr></table></figure><p>And still error:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MySQLdb/_mysql.c:37:10: fatal error: Python.h: No such file or directory</span><br><span class="line">     #include &quot;Python.h&quot;</span><br><span class="line">              ^~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br><span class="line">error: command &#x27;gcc&#x27; failed with exit status 1</span><br></pre></td></tr></table></figure><p>Well, also need python devel. So do this:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install python3-devel</span><br></pre></td></tr></table></figure><p>And I can finally install mysqlclient on python.</p><h2 id="4-Error-when-try-to-create-a-databaese"><a href="#4-Error-when-try-to-create-a-databaese" class="headerlink" title="4. Error when try to create a databaese:"></a>4. Error when try to create a databaese:</h2><p>(Added on 2019-11-17)<br>If you got this error when creating database:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR 1044 (42000): Access denied for user &#x27;USERNAME&#x27;localhost&#x27; to database &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>It’s probably because no privilege was granted to this user. Do the following under root account:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON * . * TO &#x27;USERNAME&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p>The meaning of this line:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT [type of privilege] ON [database name].[table name] TO &#x27;[username]&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p>and use <code>REVOKE</code> … <code>FROM</code> to revoke privileges from an user.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Error-when-try-to-start-MySQL-client&quot;&gt;&lt;a href=&quot;#1-Error-when-try-to-start-MySQL-client&quot; class=&quot;headerlink&quot; title=&quot;1. Error when tr</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://jas0nhuang.github.io/tags/Linux/"/>
    
    <category term="MySQL" scheme="https://jas0nhuang.github.io/tags/MySQL/"/>
    
  </entry>
  
</feed>
